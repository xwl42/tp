@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant "g:GradeCommand" as GradeCommand LOGIC_COLOR
participant "midx:MultiIndexCommand" as MultiIndexCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
participant "p:Person" as Person MODEL_COLOR
participant "gm:GradeMap" as GradeMap MODEL_COLOR
end box

[-> LogicManager : execute("grade 1:3 en/midterm s/y")
activate LogicManager

LogicManager -> GradeCommand : execute(m)
activate GradeCommand

GradeCommand -> MultiIndexCommand : execute(m)
activate MultiIndexCommand

MultiIndexCommand -> Model : getFilteredPersonList()
activate Model
Model --> MultiIndexCommand : list of persons [1,2,3]
deactivate Model

loop For each person in the filtered person list
    MultiIndexCommand -> GradeCommand : applyActionToPerson(model, p)
    activate GradeCommand

    GradeCommand -> GradeMap : markExamPassed("midterm")
    activate GradeMap
    GradeMap --> GradeCommand
    deactivate GradeMap

    GradeCommand -> Model : setPerson(old, updated)
    activate Model
    Model --> GradeCommand
    deactivate Model

    GradeCommand --> MultiIndexCommand
    deactivate GradeCommand
end

MultiIndexCommand -> GradeCommand : buildResult(updatedPersons)
activate GradeCommand

create CommandResult
GradeCommand -> CommandResult : new CommandResult("midterm marked as passed for: Alex Yeoh (A1231230B), Bernice Yu (A1231231B), Charlotte Oliveiro (A1231232B)")
activate CommandResult

CommandResult --> GradeCommand
deactivate CommandResult
GradeCommand --> MultiIndexCommand : r
deactivate GradeCommand

MultiIndexCommand --> LogicManager : r
deactivate MultiIndexCommand

[<-- LogicManager
deactivate LogicManager
@enduml
