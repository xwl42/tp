@startuml
!include ../style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":FindCommandParser" as FindCommandParser LOGIC_COLOR
participant "f:FindCommand" as FindCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("find <KEYWORD> [selectors]")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("find <KEYWORD> [selectors]")
activate AddressBookParser

' hand off to the concrete parser
create FindCommandParser
AddressBookParser -> FindCommandParser
activate FindCommandParser

' parse + build combined predicate (keywords from preamble, presence-only selectors)
FindCommandParser -> FindCommandParser : parse args\nvalidate selectors\nbuild combined predicate

' construct the command
create FindCommand
FindCommandParser -> FindCommand : new(combinedPredicate)
activate FindCommand
FindCommand --> FindCommandParser :
deactivate FindCommand

' return command to caller
FindCommandParser --> AddressBookParser : f
deactivate FindCommandParser
FindCommandParser -[hidden]-> AddressBookParser
destroy FindCommandParser

' bubble command back to Logic
AddressBookParser --> LogicManager : f
deactivate AddressBookParser

' execute and update the model
LogicManager -> FindCommand : execute(m)
activate FindCommand

FindCommand -> Model : updateFilteredPersonList(predicate)
activate Model
Model --> FindCommand
deactivate Model

' produce result
create CommandResult
FindCommand -> CommandResult
activate CommandResult
CommandResult --> FindCommand
deactivate CommandResult

FindCommand --> LogicManager : r
deactivate FindCommand

[<-- LogicManager
deactivate LogicManager
@enduml
